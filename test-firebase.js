/**
 * Script de Teste - Integra√ß√£o Firebase Realtime Database
 * 
 * Este script testa a conex√£o e funcionalidades b√°sicas do Firebase Realtime Database
 * Execute com: node test-firebase.js
 */

const { initializeApp } = require('firebase/app');
const { 
  getDatabase, 
  ref, 
  push, 
  get, 
  remove,
  serverTimestamp,
  set
} = require('firebase/database');

// Configura√ß√£o do Firebase (substitua pelas suas credenciais)
const firebaseConfig = {
  apiKey: "AIzaSyBFGTnhc92fGQprmO8VrDLTld-2397C2Ic",
  authDomain: "fernando-22bcd.firebaseapp.com",
  databaseURL: "https://fernando-22bcd-default-rtdb.firebaseio.com",
  projectId: "fernando-22bcd",
  storageBucket: "fernando-22bcd.firebasestorage.app",
  messagingSenderId: "213119815234",
  appId: "1:213119815234:web:fddafdf3e98b68b70aa7db",
  measurementId: "G-H9GDCHKWX4"
};

// Inicializar Firebase
const app = initializeApp(firebaseConfig);
const database = getDatabase(app);

// Dados de teste
const testMechanic = {
  cpf: "123.456.789-00",
  nome: "Jo√£o Silva Teste",
  email: "joao.teste@email.com",
  telefone: "(11) 99999-9999",
  especialidade: "Motor e Transmiss√£o",
  matricula: "12345",
  status: "ativo",
  createdAt: serverTimestamp(),
  updatedAt: serverTimestamp()
};

async function testFirebaseConnection() {
  console.log('üîß Testando integra√ß√£o com Firebase Realtime Database...\n');

  try {
    // Teste 1: Conex√£o b√°sica
    console.log('1Ô∏è‚É£ Testando conex√£o b√°sica...');
    const mechanicsRef = ref(database, 'mecanicos');
    const snapshot = await get(mechanicsRef);
    console.log('‚úÖ Conex√£o OK! Documentos encontrados:', snapshot.exists() ? Object.keys(snapshot.val() || {}).length : 0);

    // Teste 2: Adicionar mec√¢nico de teste
    console.log('\n2Ô∏è‚É£ Testando adi√ß√£o de mec√¢nico...');
    const newMechanicRef = push(ref(database, 'mecanicos'));
    await set(newMechanicRef, testMechanic);
    console.log('‚úÖ Mec√¢nico adicionado com UID:', newMechanicRef.key);

    // Teste 3: Buscar mec√¢nico adicionado
    console.log('\n3Ô∏è‚É£ Testando busca de mec√¢nico...');
    const mechanicRef = ref(database, `mecanicos/${newMechanicRef.key}`);
    const mechanicSnapshot = await get(mechanicRef);
    
    if (mechanicSnapshot.exists()) {
      console.log('‚úÖ Mec√¢nico encontrado:', mechanicSnapshot.val().nome);
    } else {
      console.log('‚ùå Mec√¢nico n√£o encontrado');
    }

    // Teste 4: Deletar mec√¢nico de teste
    console.log('\n4Ô∏è‚É£ Testando exclus√£o de mec√¢nico...');
    await remove(mechanicRef);
    console.log('‚úÖ Mec√¢nico de teste removido');

    // Teste 5: Verificar contagem final
    console.log('\n5Ô∏è‚É£ Verificando contagem final...');
    const finalSnapshot = await get(mechanicsRef);
    console.log('‚úÖ Contagem final de documentos:', finalSnapshot.exists() ? Object.keys(finalSnapshot.val() || {}).length : 0);

    console.log('\nüéâ Todos os testes passaram! Firebase Realtime Database est√° funcionando corretamente.');
    console.log('\nüì± Voc√™ pode agora executar o app React Native com: npm start');

  } catch (error) {
    console.error('\n‚ùå Erro durante os testes:', error.message);
    console.log('\nüîß Poss√≠veis solu√ß√µes:');
    console.log('1. Verifique se as credenciais do Firebase est√£o corretas');
    console.log('2. Confirme se o projeto Firebase est√° ativo');
    console.log('3. Verifique se as regras do Realtime Database permitem leitura/escrita');
    console.log('4. Certifique-se de que o Realtime Database est√° habilitado');
    console.log('5. Verifique se a URL do database est√° correta');
  }
}

// Executar testes
testFirebaseConnection(); 